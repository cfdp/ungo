<?php

/* Returns the relevant profile2 user picture, $uid is sent along from comments */
function cfdp_uf_get_user_picture(&$variables, $uid){
 
  // get user id from current node if it is not passed as parameter
  if (arg(0) == 'node' && is_numeric(arg(1)) && !$uid ) {
    // Get the nid
    $nid = arg(1);
    $node = node_load($nid);
    $uid = $node->uid;
  }
  
  $user = user_load($uid);

  /* @todo: if the user doesn't have a profile2 profile, we get a nasty error...'*/
  if (in_array('client', $user->roles)) {
    $profile = profile2_load_by_user($uid, 'client');
  }
  else if (in_array('counselor', $user->roles)) {
    $profile = profile2_load_by_user($uid, 'counselor');
  }
  else if (in_array('authenticated user', $user->roles)) {
    /* This is a pretty crude way of getting around the missing profile2 issue @todo: find better way */
    return '<img alt="" src="/sites/default/files/default_images/profile_default_0.jpg" typeof="foaf:Image">';
  }
  else {
    //user is anonymous - this could happen if anonymous users can post content. @todo: handle this case!
    return '<img alt="" src="/sites/default/files/default_images/profile_default_0.jpg" typeof="foaf:Image">';
  }

  $display = array(
                'type' => 'image',
                'label'=> 'hidden',// inline, above
                'settings'=>array(
                            'image_style'=> 'ungo_profile_img',
                            'image_link'=> 'content',
                ));
                
  return drupal_render(field_view_field('profile2', $profile, 'field_profile_picture', $display));
}

/* Returns the counselor uid (field_counselor) of the logged in client. 
 * Being used in Client View @todo: handle the case of the client not having a counselor */
function cfdp_uf_get_counselor_uid(){
  global $user;
  $cid = NULL;
  if (in_array('client', $user->roles)) {
    // Get the client profile
    $profile = profile2_load_by_user($user->uid, 'client');
    // digging right into the object - @todo: this should be done with field_view_field() or similar API function
    $cid = $profile->field_counselor['und'][0]['target_id'];
  }
  // The function was called for a non-client
  else {
    drupal_set_message(t('Error: cfdp_uf_get_counselor_uid() should only be called for clients'), 'error');
  }
  return $cid;
}

/* Setup permissions for marking questions done by using the status field on the question content type */

function cfdp_uf_permission() {
  return array(
    'view question status' => array(
      'title' => t('View the field value'),
      'description' => t('Allows a user to view the status of a question')
    ),
    'archive question' => array(
      'title' => t('Set the status field value to arcchived'),
      'description' => t('Allows a user to archive a question')
    ),
    'reopen question' => array(
      'title' => t('Set the status field value from archived to open'),
      'description' => t('Allows a user to reopen a question')
    ), 
  );
}

function cfdp_uf_menu() {
 $items['cfdp_uf'] = array(
  'title' => 'My title', //The name of the menu that will be displayed
  'page callback' => 'cfdp_uf_page_callback', //The name of the function that will output a page
 );
 return $items;
}

function cfdp_uf_page_callback() {
 //The argument is the name of the function with the form details
 return drupal_get_form('cfdp_uf_form');
}

function cfdp_uf_form($form, &$form_state) {
  
  $node = cfdp_uf_get_current_node();


  if($node->field_status['und'][0]['value'] == 'archived'){

    $label = t('Open');

  }else if($node->field_status['und'][0]['value'] == 'pending'){

    $label = t('Archive');

  }

 $form = array (
  '#action' => '#', //The action attribute of the HTML form tag
  'archive' => array ( //We define a simple text field for the "name"
   '#type' => 'hidden',
   '#value' => 'archive',
  ),
  'submit' => array ( //We define a simple submit button
   '#type' => 'submit',
   '#value' => $label,
   '#attributes' => array('onclick' => 'if(!confirm("Really Delete?")){return false;}'),
  ),
 );

 return $form;
}

function cfdp_uf_form_submit($form, &$form_state) {
 
 //drupal_set_message(t('Yay, your name is fine!'));

  // Load the current node object
  $node = cfdp_uf_get_current_node();

  // Check if the value of the status field is archvived(string)
  if($node->field_status['und'][0]['value'] == 'archived'){

    $action = 'pending';
    $comments = '2';

  }else if($node->field_status['und'][0]['value'] == 'pending'){

    $action = 'archived';
    $comments = '1';

  }
  
  $node->field_status['und'][0]['value'] = $action;
  
  //Enable or disable the comments
  $node->comment = $comments;
  
  //Overwrite the current node with the new values
  node_save($node);
}


//Help function to load the current node
function cfdp_uf_get_current_node(){
  
  $node = menu_get_object();
  $nid = $node->nid;
  $node = node_load($nid);

  return $node;
}